generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Table {
  id                String            @id @default(uuid())
  min_capacity      Int
  max_capacity      Int
  image_uri         String?           @db.Text
  description       String?           @db.Text
  no_table          String            @unique
  is_outdoor        Boolean
  barcode           String?
  is_active         Boolean
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  deleted_at        DateTime?
  detail_reservasis DetailReservasi[]

  @@map("table")
}

model Menu {
  id            String        @id @default(uuid())
  name          String
  price         Float
  description   String        @db.Text
  category      String
  image_uri     String?       @db.Text
  qty           Int           @default(0)
  is_active     Boolean       @default(false)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  deleted_at    DateTime?
  order_details OrderDetail[]

  @@map("menu")
}

model Supplier {
  id           String       @id @default(uuid())
  name         String
  contact      String
  type         SupplierType
  product_name String
  price        Float
  shipping_fee Float
  address      String       @db.Text
  unit         Unit
  is_active    Boolean      @default(false)
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  deleted_at   DateTime?

  @@map("supplier")
}

model Reservasi {
  id                String            @id @default(uuid())
  reserve_by        String
  community         String
  phone_number      String
  note              String?           @db.Text
  start             DateTime
  end               DateTime
  half_payment      Boolean          @default(false)
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  deleted_at        DateTime?
  detail_reservasis DetailReservasi[]
  orders            Order[]

  @@map("reservasi")
}

model DetailReservasi {
  id           String    @id @default(uuid())
  reservasi_id String
  table_id     String
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted_at   DateTime?
  reservasi    Reservasi @relation(fields: [reservasi_id], references: [id])
  table        Table     @relation(fields: [table_id], references: [id])

  @@index([reservasi_id], map: "detail_reservasi_reservasi_id_fkey")
  @@index([table_id], map: "detail_reservasi_table_id_fkey")
  @@map("detail_reservasi")
}

model Order {
  id           String        @id @default(uuid())
  reservasi_id String?
  order_by     String
  phone_number String
  status       String
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  deleted_at   DateTime?
  reservasi    Reservasi?    @relation(fields: [reservasi_id], references: [id])
  order_detail OrderDetail[]
  transaction  Transaction[]

  @@index([reservasi_id], map: "order_reservasi_id_fkey")
  @@map("order")
}

model OrderDetail {
  id         String    @id @default(uuid())
  order_id   String
  menu_id    String
  qty        Int
  price      Float
  note       String?   @db.Text
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  menu       Menu      @relation(fields: [menu_id], references: [id])
  order      Order     @relation(fields: [order_id], references: [id])

  @@index([menu_id], map: "order_detail_menu_id_fkey")
  @@index([order_id], map: "order_detail_order_id_fkey")
  @@map("order_detail")
}

model Transaction {
  id              String    @id @default(uuid())
  trx_id          String?
  order_id        String
  gross_amount    Float
  payment_method  String
  admin_fee       Float
  status          String
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  deleted_at      DateTime?
  order           Order     @relation(fields: [order_id], references: [id])

  @@index([order_id], map: "transaction_order_id_fkey")
  @@map("transaction")
}

enum SupplierType {
  SYRUPE
  BEANS
  POWDER
  CUP
  SNACK
  OTHER_INGREDIENT @map("OTHER INGREDIENT")
}

enum Unit {
  KG
  LITER
  GRAM
  ML
  PIECE
  BOX
  BALL
}

enum OrderStatus {
  MENUNGGU_PEMBAYARAN
  MENUNGGU_PELUNASAN
  BELUM_DIBUAT
  PROSES
  SELESAI_DIBUAT
  CANCELED
}